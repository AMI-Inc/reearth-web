name: pr
on: [pull_request]
jobs:
  pr:
    name: pr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        run: yarn install
      - name: Check
        run: yarn run check
      - name: Send coverage report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
      - name: Storybook Notification
        run: yarn run storybook:notify
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_PR_COMMENTS_URL: ${{ github.event.pull_request.comments_url }}
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_BRANCH_NAME: ${{ github.event.pull_request.base.ref }}
      # - name: Slack Notification
      #   uses: 8398a7/action-slack@v3
      #   if: always()
      #   with:
      #     status: ${{ job.status }}
      #     fields: repo,commit,action,workflow
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
